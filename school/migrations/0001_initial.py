# -*- coding: utf-8 -*-
# Generated by Django 1.9.2 on 2016-08-20 11:19
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('sysadmin', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='school_category', to='sysadmin.Category', verbose_name='Category')),
            ],
            options={
                'verbose_name_plural': 'Categories',
            },
        ),
        migrations.CreateModel(
            name='CategoryType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('categorytype', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='school_categorytype', to='sysadmin.CategoryType', verbose_name='Category Type')),
            ],
            options={
                'verbose_name_plural': 'Category type',
            },
        ),
        migrations.CreateModel(
            name='Classes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('classes', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='school_classes', to='sysadmin.Classes', verbose_name='Classes')),
            ],
            options={
                'verbose_name_plural': 'Classes',
            },
        ),
        migrations.CreateModel(
            name='ClassStreams',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('classes', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='school_classstreams', to='school.Classes', verbose_name='Classes')),
            ],
            options={
                'verbose_name_plural': "Class streams(Click 'Save & Continue Editing' first for dropdowns to be populated)",
            },
        ),
        migrations.CreateModel(
            name='Dormitory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dormitory', models.CharField(max_length=5000, verbose_name='Dormitory')),
            ],
            options={
                'verbose_name_plural': 'Dormitory',
            },
        ),
        migrations.CreateModel(
            name='Gender',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gender', models.CharField(max_length=5000, verbose_name='Gender')),
            ],
            options={
                'verbose_name_plural': 'Gender',
            },
        ),
        migrations.CreateModel(
            name='House',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('house', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='school_house', to='sysadmin.House', verbose_name='House')),
            ],
            options={
                'verbose_name_plural': 'House',
            },
        ),
        migrations.CreateModel(
            name='Months',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('month', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='school_month', to='sysadmin.Months', verbose_name='Month')),
            ],
            options={
                'verbose_name_plural': 'Months',
            },
        ),
        migrations.CreateModel(
            name='Papers',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name_plural': 'Papers',
            },
        ),
        migrations.CreateModel(
            name='PaymentMethods',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name_plural': 'Payment methods',
            },
        ),
        migrations.CreateModel(
            name='SchoolAccounts',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('accountnumber', models.CharField(max_length=5000)),
            ],
            options={
                'verbose_name_plural': 'School Accounts',
            },
        ),
        migrations.CreateModel(
            name='SchoolEmails',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.CharField(max_length=5000)),
            ],
            options={
                'verbose_name_plural': 'School Emails',
            },
        ),
        migrations.CreateModel(
            name='SchoolLocation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('county', models.CharField(max_length=5000)),
                ('division', models.CharField(max_length=5000)),
                ('constituency', models.CharField(max_length=5000)),
                ('location', models.CharField(max_length=5000)),
                ('sublocation', models.CharField(max_length=5000)),
                ('town', models.CharField(max_length=5000)),
            ],
            options={
                'verbose_name_plural': 'School Location',
            },
        ),
        migrations.CreateModel(
            name='SchoolPhone',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phonenumber', models.CharField(max_length=5000)),
            ],
            options={
                'verbose_name_plural': 'School Phone',
            },
        ),
        migrations.CreateModel(
            name='SchoolProfiles',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('motto', models.CharField(max_length=5000)),
                ('mission', models.CharField(max_length=5000)),
                ('vision', models.CharField(max_length=5000)),
                ('county', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='sysadmin.County')),
            ],
            options={
                'verbose_name_plural': 'School profiles',
            },
        ),
        migrations.CreateModel(
            name='SchoolStaff',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='school.SchoolProfiles', verbose_name='Name')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Owner')),
            ],
            options={
                'verbose_name_plural': 'School staff',
            },
        ),
        migrations.CreateModel(
            name='SchoolType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='school.SchoolProfiles', verbose_name='Name')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='owner')),
                ('schooltype', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='school_schooltype', to='sysadmin.SchoolType', verbose_name='School type')),
            ],
            options={
                'verbose_name_plural': 'School Type',
            },
        ),
        migrations.CreateModel(
            name='Streams',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='school.SchoolProfiles', verbose_name='Name')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='owner')),
                ('streams', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='school_streams', to='sysadmin.Stream', verbose_name='Stream')),
            ],
            options={
                'verbose_name_plural': 'Streams',
            },
        ),
        migrations.CreateModel(
            name='Subjects',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='school.SchoolProfiles', verbose_name='Name')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='owner')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='school_subject', to='sysadmin.Subject', verbose_name='Subject')),
            ],
            options={
                'verbose_name_plural': 'Subjects',
            },
        ),
        migrations.CreateModel(
            name='SystemConfig',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('command_label', models.CharField(max_length=255, unique=True, verbose_name='Command Label')),
                ('command', models.CharField(max_length=255, verbose_name='command')),
            ],
            options={
                'verbose_name_plural': 'System Config',
            },
        ),
        migrations.CreateModel(
            name='Terms',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('startdate', models.DateTimeField(verbose_name='Start Date')),
                ('enddate', models.DateTimeField(verbose_name='End Date')),
                ('name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='school.SchoolProfiles', verbose_name='Name')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='owner')),
                ('terms', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='school_terms', to='sysadmin.Term', verbose_name='Terms')),
            ],
            options={
                'verbose_name_plural': 'Terms',
            },
        ),
        migrations.AddField(
            model_name='schoolphone',
            name='name',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='school.SchoolProfiles', verbose_name='Name'),
        ),
        migrations.AddField(
            model_name='schoollocation',
            name='name',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='school.SchoolProfiles', verbose_name='Name'),
        ),
        migrations.AddField(
            model_name='schoolemails',
            name='name',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='school.SchoolProfiles', verbose_name='Name'),
        ),
        migrations.AddField(
            model_name='schoolaccounts',
            name='name',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='school.SchoolProfiles', verbose_name='Name'),
        ),
        migrations.AddField(
            model_name='paymentmethods',
            name='name',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='school.SchoolProfiles', verbose_name='Name'),
        ),
        migrations.AddField(
            model_name='paymentmethods',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='owner'),
        ),
        migrations.AddField(
            model_name='paymentmethods',
            name='paymentmethods',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='school_paymentmethod', to='sysadmin.PaymentMethod', verbose_name='Payment methods'),
        ),
        migrations.AddField(
            model_name='papers',
            name='name',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='papers_name', to='school.SchoolProfiles', verbose_name='Name'),
        ),
        migrations.AddField(
            model_name='papers',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='papers_owner', to=settings.AUTH_USER_MODEL, verbose_name='owner'),
        ),
        migrations.AddField(
            model_name='papers',
            name='papername',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='school_paper', to='sysadmin.Paper', verbose_name='Paper'),
        ),
        migrations.AddField(
            model_name='months',
            name='name',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='school.SchoolProfiles', verbose_name='Name'),
        ),
        migrations.AddField(
            model_name='months',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='owner'),
        ),
        migrations.AddField(
            model_name='house',
            name='name',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='school.SchoolProfiles', verbose_name='Name'),
        ),
        migrations.AddField(
            model_name='house',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='owner'),
        ),
        migrations.AddField(
            model_name='gender',
            name='name',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='school.SchoolProfiles', verbose_name='Name'),
        ),
        migrations.AddField(
            model_name='gender',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='owner'),
        ),
        migrations.AddField(
            model_name='dormitory',
            name='name',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='school.SchoolProfiles', verbose_name='Name'),
        ),
        migrations.AddField(
            model_name='dormitory',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='owner'),
        ),
        migrations.AddField(
            model_name='classstreams',
            name='name',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='school.SchoolProfiles', verbose_name='Name'),
        ),
        migrations.AddField(
            model_name='classstreams',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='owner'),
        ),
        migrations.AddField(
            model_name='classstreams',
            name='streams',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='school.Streams', verbose_name='Streams'),
        ),
        migrations.AddField(
            model_name='classes',
            name='name',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='school.SchoolProfiles', verbose_name='Name'),
        ),
        migrations.AddField(
            model_name='classes',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='owner'),
        ),
        migrations.AddField(
            model_name='categorytype',
            name='name',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='school.SchoolProfiles', verbose_name='Name'),
        ),
        migrations.AddField(
            model_name='categorytype',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='owner'),
        ),
        migrations.AddField(
            model_name='category',
            name='categorytype',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='school_category', to='school.CategoryType', verbose_name='Category Type'),
        ),
        migrations.AddField(
            model_name='category',
            name='name',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='school.SchoolProfiles', verbose_name='Name'),
        ),
        migrations.AddField(
            model_name='category',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='owner'),
        ),
        migrations.AlterUniqueTogether(
            name='terms',
            unique_together=set([('name', 'terms', 'startdate', 'enddate')]),
        ),
        migrations.AlterUniqueTogether(
            name='subjects',
            unique_together=set([('name', 'subject')]),
        ),
        migrations.AlterUniqueTogether(
            name='streams',
            unique_together=set([('name', 'streams')]),
        ),
        migrations.AlterUniqueTogether(
            name='schooltype',
            unique_together=set([('name', 'schooltype')]),
        ),
        migrations.AlterUniqueTogether(
            name='schoolphone',
            unique_together=set([('name', 'phonenumber')]),
        ),
        migrations.AlterUniqueTogether(
            name='schoolemails',
            unique_together=set([('name', 'email')]),
        ),
        migrations.AlterUniqueTogether(
            name='schoolaccounts',
            unique_together=set([('name', 'accountnumber')]),
        ),
        migrations.AlterUniqueTogether(
            name='paymentmethods',
            unique_together=set([('name', 'paymentmethods')]),
        ),
        migrations.AlterUniqueTogether(
            name='papers',
            unique_together=set([('name', 'papername')]),
        ),
        migrations.AlterUniqueTogether(
            name='months',
            unique_together=set([('name', 'month')]),
        ),
        migrations.AlterUniqueTogether(
            name='house',
            unique_together=set([('name', 'house')]),
        ),
        migrations.AlterUniqueTogether(
            name='gender',
            unique_together=set([('name', 'gender')]),
        ),
        migrations.AlterUniqueTogether(
            name='dormitory',
            unique_together=set([('name', 'dormitory')]),
        ),
        migrations.AlterUniqueTogether(
            name='classes',
            unique_together=set([('name', 'classes')]),
        ),
        migrations.AlterUniqueTogether(
            name='categorytype',
            unique_together=set([('name', 'categorytype')]),
        ),
        migrations.AlterUniqueTogether(
            name='category',
            unique_together=set([('name', 'categorytype', 'category')]),
        ),
    ]
